@{
    ViewData["Title"] = "Home Page";
}

<h1>测试页</h1>
<div id="uploader-demo">
    <!--用来存放item-->
    <div id="fileList" class="uploader-list"></div>
    <div id="filePicker">选择图片</div>
</div>
<script>
    // 优化retina, 在retina下这个值是2
    var ratio = window.devicePixelRatio || 1,
        // 缩略图大小
        thumbnailWidth = 100 * ratio,
        thumbnailHeight = 100 * ratio;
    // 初始化Web Uploader
    var uploader = WebUploader.create({
        // 选完文件后，是否自动上传。
        auto: true,
        // swf文件路径
        swf: '/lib/webuploader/Uploader.swf',
        // 文件接收服务端。
        server: 'http://up.imgapi.com/',
        method: 'POST',
        // 选择文件的按钮。可选。
        // 内部根据当前运行是创建，可能是input元素，也可能是flash.
        pick: '#filePicker',
        // 只允许选择图片文件。
        accept: {
            title: 'Images',
            extensions: 'gif,jpg,jpeg,bmp,png',
            mimeTypes: 'image/*'
        },
        formData: { "Token": "74bf6e1dbc15deb7eb3d8d64f0cdd122b18ad835:zH9CSmcMnnup7Gzz6gqRpJtGIew=:eyJkZWFkbGluZSI6MTU1NDYyMDAxNSwiYWN0aW9uIjoiZ2V0IiwidWlkIjoiNjgyOTYxIiwiYWlkIjoiMTU3NDEzOSIsImZyb20iOiJmaWxlIn0=" }
    });
    // 当有文件添加进来的时候
    uploader.on('fileQueued', function( file ) {
        var $li = $(
                '<div id="' + file.id + '" class="file-item thumbnail">' +
                '<img>' +
                '<div class="info">' + file.name + '</div>' +
                '</div>'
            ),
            $img = $li.find('img');
        // $list为容器jQuery实例
        $("#fileList").append($li);

        // 创建缩略图
        // 如果为非图片文件，可以不用调用此方法。
        // thumbnailWidth x thumbnailHeight 为 100 x 100
        uploader.makeThumb( file, function( error, src ) {
            if ( error ) {
                $img.replaceWith('<span>不能预览</span>');
                return;
            }
            $img.attr( 'src', src );
        }, thumbnailWidth, thumbnailHeight );
    });
    // 文件上传过程中创建进度条实时显示。
    uploader.on( 'uploadProgress', function( file, percentage ) {
        var $li = $( '#'+file.id ),
            $percent = $li.find('.progress span');
        // 避免重复创建
        if ( !$percent.length ) {
            $percent = $('<p class="progress"><span></span></p>')
                .appendTo( $li )
                .find('span');
        }
        $percent.css( 'width', percentage * 100 + '%' );
    });

// 文件上传成功，给item添加成功class, 用样式标记上传成功。
    uploader.on('uploadSuccess', function (file, response) {
        console.log(JSON.stringify(response));
        $( '#'+file.id ).addClass('upload-state-done');
    });

// 文件上传失败，显示上传出错。
    uploader.on('uploadError', function (file) {
        var $li = $( '#'+file.id ),
            $error = $li.find('div.error');
        // 避免重复创建
        if ( !$error.length ) {
            $error = $('<div class="error"></div>').appendTo($li);
        }
        $error.text('上传失败');
    });

// 完成上传完了，成功或者失败，先删除进度条。
    uploader.on('uploadComplete', function (file) {
        $( '#'+file.id ).find('.progress').remove();
    });
    layui.use('layim', function (layim) {
        //基础配置
        layim.config({
            init: {
                url: '/Home/GetInitData', //接口地址（返回的数据格式见下文）
                type: 'get', //默认get，一般可不填
                data: {} //额外参数
            } //获取主面板列表信息，下文会做进一步介绍
            //获取群员接口（返回的数据格式见下文）
            , members: {
                url: '/Home/GetMembers' //接口地址（返回的数据格式见下文）
                , type: 'get' //默认get，一般可不填
                , data: {} //额外参数
            }
            //上传图片接口（返回的数据格式见下文），若不开启图片上传，剔除该项即可
            , uploadImage: {
                url: 'http://up.imgapi.com/' //接口地址
                , type: 'post', //默认post
                accept: "images",
                acceptMime: "image/*", //（只显示图片文件）
                data: { "Token": "74bf6e1dbc15deb7eb3d8d64f0cdd122b18ad835:zH9CSmcMnnup7Gzz6gqRpJtGIew=:eyJkZWFkbGluZSI6MTU1NDYyMDAxNSwiYWN0aW9uIjoiZ2V0IiwidWlkIjoiNjgyOTYxIiwiYWlkIjoiMTU3NDEzOSIsImZyb20iOiJmaWxlIn0="} //可选项。额外的参数
            }
            //上传文件接口（返回的数据格式见下文），若不开启文件上传，剔除该项即可
            , uploadFile: {
                url: '' //接口地址
                , type: 'post', //默认post
                accept: "file"
            }
            //扩展工具栏，下文会做进一步介绍（如果无需扩展，剔除该项即可）
            , tool: [{
                alias: 'code' //工具别名
                , title: '代码' //工具名称
                , icon: '&#xe64e;' //工具图标，参考图标文档
            }]
            , msgbox: layui.cache.dir + 'css/modules/layim/html/msgbox.html' //消息盒子页面地址，若不开启，剔除该项即可
            , find: layui.cache.dir + 'css/modules/layim/html/find.html' //发现页面地址，若不开启，剔除该项即可
            , chatLog: layui.cache.dir + 'css/modules/layim/html/chatlog.html' //聊天记录页面地址，若不开启，剔除该项即可
        });
        //监听自定义工具栏点击，以添加代码为例
        layim.on('tool(code)', function(insert, send, obj){ //事件中的tool为固定字符，而code则为过滤器，对应的是工具别名（alias）
            layer.prompt({
                title: '插入代码'
                ,formType: 2
                ,shade: 0
            }, function(text, index){
                layer.close(index);
                insert('[pre class=layui-code]' + text + '[/pre]'); //将内容插入到编辑器，主要由insert完成
                send(); //自动发送
            });
            console.log(this); //获取当前工具的DOM对象
            console.log(obj); //获得当前会话窗口的DOM对象、基础信息
        });
    });   
</script> 